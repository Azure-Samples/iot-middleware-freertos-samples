@startuml

state AzureIot {
    state Idle
    
    state Provisioning
    Provisioning: <b>entry/</b>
    Provisioning: \t startSeconds = startstopwatch()
    Provisioning: <b>exit/</b>
    Provisioning: \t totalTicks = getticks() - startTicks

    state RetryProvisioning
    RetryProvisioning : <b>entry/</b>
    RetryProvisioning : \t initialize delayTimer
    RetryProvisioning : 
    RetryProvisioning : <b>exit/</b>
    RetryProvisioning : \t destroy delayTimer
    RetryProvisioning : 
    RetryProvisioning : <b>AZ_IOT_PROVISIONING_ERROR/</b>
    RetryProvisioning : \t if (retriable_error()) {
    RetryProvisioning : \t\t start delayTimer(calculate_retry_delay())
    RetryProvisioning : \t }
    RetryProvisioning : \t else {
    RetryProvisioning : \t\t rotate_dps_credentials(credential_idx)
    RetryProvisioning : \t\t ^AZ_IOT_PROVISIONING_START
    RetryProvisioning : \t }
    RetryProvisioning :
    RetryProvisioning : <b>TIMEOUT/</b>
    RetryProvisioning : \t start(delayTimer(calculate_retry_delay))
    RetryProvisioning :
    RetryProvisioning : <b>RETRY_TIMEOUT/</b>
    RetryProvisioning : \t stop(delayTimer)
    RetryProvisioning : \t ^^AZ_IOT_PROVISIONING_START

    state Hub
    Hub: <i>See IoT Hub HFSM</i>

    state RetryHub
    RetryHub : <b>entry/</b>
    RetryHub : \t initialize delayTimer
    RetryHub : 
    RetryHub : <b>exit/</b>
    RetryHub : \t destroy delayTimer
    RetryHub : 
    RetryHub : <b>AZ_IOT_HUB_ERROR/</b>
    RetryHub : \t if (retriable_error) {
    RetryHub : \t\t start(delayTimer(calculate_retry_delay))
    RetryHub : \t }
    RetryHub : \t else {
    RetryHub : \t #if USE_PROVISIONING
    RetryHub : \t\t ^^AZ_IOT_PROVISIONING_START
    RetryHub : \t #else
    RetryHub : \t\t rotate_hub_credentials(credential_idx)
    RetryHub : \t\t #endif
    RetryHub : \t }
    RetryHub :
    RetryHub : <b>TIMEOUT/</b>
    RetryHub : \t start(delayTimer(calculate_retry_delay))
    RetryHub :
    RetryHub : <b>RETRY_TIMEOUT/</b>
    RetryHub : \t stop(delayTimer)
    RetryHub : \t ^AZ_IOT_HUB_START

    [*] -> Idle
    Idle --> Provisioning : AZ_IOT_PROVISIONING_START
    Provisioning --> Hub : AZ_IOT_HUB_START
    Provisioning -> RetryProvisioning : AZ_IOT_PROVISIONING_ERROR, TIMEOUT

    RetryProvisioning -> Provisioning : AZ_IOT_PROVISIONING_START
    Hub -> RetryHub : AZ_IOT_HUB_ERROR, TIMEOUT
    RetryHub -> Hub : AZ_IOT_HUB_START
    RetryHub -> Provisioning : AZ_IOT_PROVISIONING_START
}

AzureIot : <b>entry/</b> credential_idx = 0
AzureIot : <b>ERROR/</b> reboot

@enduml
